{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "08wxz99j4pjvw"
  },
  "info": {
    "title": "Report API",
    "version": "1.0",
    "contact": {
      "name": "ezTeam",
      "url": "https://github.com/ezpaarse-project",
      "email": "ezpaarse@couperin.org"
    },
    "license": {
      "name": "CeCILL",
      "url": "https://github.com/ezpaarse-project/reporting/blob/master/LICENSE.txt"
    },
    "description": "Reporting service for ezMESURE/ezCOUNTER"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Get pingables services",
        "tags": [
          "health"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "string"
                        },
                        "services": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "current": "reporting-report",
                        "services": [
                          "reporting-report",
                          "elastic"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "current": "reporting-report",
                        "services": [
                          "reporting-report",
                          "elastic"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "health-get",
        "description": "Check services that current one can ping"
      }
    },
    "/health/all": {
      "get": {
        "summary": "Ping all services",
        "tags": [
          "health"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": [
                        {
                          "name": "reporting-report",
                          "success": true,
                          "time": 3,
                          "timeout": false
                        },
                        {
                          "name": "elastic",
                          "success": true,
                          "time": 14,
                          "timeout": false
                        }
                      ]
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pong"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": [
                        {
                          "name": "reporting-report",
                          "status": true,
                          "elapsedTime": 3,
                          "statusCode": 200
                        },
                        {
                          "name": "elastic",
                          "status": false,
                          "elapsedTime": 1000,
                          "statusCode": null
                        },
                        {
                          "name": "error",
                          "status": false,
                          "error": "timed out"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "health-get-all",
        "description": "Ping all services (himself included)"
      },
      "parameters": []
    },
    "/health/{service}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "service",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Ping specific service",
        "tags": [
          "health"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "success": {
                          "type": "boolean"
                        },
                        "time": {
                          "type": "integer"
                        },
                        "timeout": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "elastic",
                        "success": true,
                        "time": 9,
                        "timeout": false
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "elastic",
                        "status": true,
                        "elapsedTime": 35,
                        "statusCode": 200
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "health-get-service",
        "description": "Ping specific service"
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get all tasks",
        "tags": [
          "tasks"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": [
                        {
                          "id": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                          "institution": "institution:aaaa0000-0000-00aa-aa00-aa00a0aa000a",
                          "layout": {
                            "...": "..."
                          },
                          "targets": [
                            "..."
                          ],
                          "recurrence": "WEEKLY",
                          "nextRun": "2022-10-31T10:00:00.000Z",
                          "enabled": true,
                          "history": [
                            {
                              "type": "creation",
                              "message": "La tâche a été créée par ..."
                            }
                          ],
                          "createdAt": "2022-10-25T11:55:47.375Z",
                          "updatedAt": "2022-10-25T11:55:47.375Z"
                        }
                      ],
                      "meta": {
                        "count": 1,
                        "lastId": "4359c49b-cde2-4330-b9aa-790f8c6cc840"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "array",
                      "description": "Tasks here doesn't include \"layout\", \"targets\" & \"history\"",
                      "items": {
                        "$ref": "#/components/schemas/Task"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "lastId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": [
                        {
                          "id": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                          "name": "My Super Task",
                          "institution": "institution:aaaa0000-0000-00aa-aa00-aa00a0aa000a",
                          "recurrence": "WEEKLY",
                          "nextRun": "2022-10-31T10:00:00.000Z",
                          "lastRun": "2022-10-31T10:00:00.000Z",
                          "enabled": true,
                          "createdAt": "2022-10-25T11:55:47.375Z",
                          "updatedAt": "2022-10-25T11:55:47.375Z"
                        }
                      ],
                      "meta": {
                        "count": 1,
                        "lastId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "tasks-get",
        "description": "Get tasks of the authed user's institution. Accessible to READ.",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/previous"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "$ref": "#/components/parameters/institution"
          }
        ]
      },
      "post": {
        "summary": "Add new task",
        "operationId": "tasks-post",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 201,
                        "message": "Created"
                      },
                      "content": {
                        "id": "4359c49b-cde2-4330-b9aa-790f8c6cc840",
                        "institution": "institution:abba8400-1216-11eb-af77-ff33b5dd411e",
                        "layout": {
                          "notImplemented": true
                        },
                        "targets": [
                          "user@example.com"
                        ],
                        "recurrence": "WEEKLY",
                        "nextRun": "2022-10-31T10:00:00.000Z",
                        "enabled": true,
                        "history": [
                          {
                            "type": "creation",
                            "message": "La tâche a été créée par ..."
                          }
                        ],
                        "createdAt": "2022-10-25T11:55:47.375Z",
                        "updatedAt": "2022-10-25T11:55:47.375Z"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/FullTask"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 201,
                        "message": "Created"
                      },
                      "content": {
                        "id": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                        "name": "My Super Task",
                        "institution": "institution:aaaa0000-0000-00aa-aa00-aa00a0aa000a",
                        "layout": {
                          "extends": "basic"
                        },
                        "targets": [
                          "user@example.com"
                        ],
                        "recurrence": "WEEKLY",
                        "nextRun": "2022-10-31T10:00:00.000Z",
                        "lastRun": "2022-10-31T10:00:00.000Z",
                        "enabled": true,
                        "history": [
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000000",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche crée par ...",
                            "createdAt": "2022-11-07T15:06:24.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000001",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche éditée par ...",
                            "createdAt": "2022-11-07T15:08:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000002",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-error",
                            "message": "Rapport \"...\" non généré par ... suite à une erreur.",
                            "createdAt": "2022-11-07T15:16:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000003",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-success",
                            "message": "Rapport \"...\" généré par ...",
                            "createdAt": "2022-11-07T15:17:49.000Z"
                          }
                        ],
                        "createdAt": "2022-10-25T11:55:47.375Z",
                        "updatedAt": "2022-10-25T11:55:47.375Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FullTask"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "My Super Task",
                    "layout": {
                      "extends": "basic"
                    },
                    "targets": [
                      "user@example.com"
                    ],
                    "recurrence": "WEEKLY",
                    "nextRun": "2022-10-31T12:00:00+02:00",
                    "enabled": true
                  }
                }
              }
            }
          },
          "description": ""
        },
        "description": "Add new reporting task to the authed user's institution. Accessible to READ_WRITE.",
        "parameters": [
          {
            "$ref": "#/components/parameters/institution"
          }
        ],
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/{taskId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "taskId",
          "in": "path",
          "required": true,
          "description": "The task id"
        }
      ],
      "get": {
        "summary": "Get specific task",
        "tags": [
          "tasks"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "3f419e88-5a82-4c35-8520-a40a4f1742ae",
                        "institution": "institution:abba8400-1216-11eb-af77-ff33b5dd411e",
                        "layout": {
                          "notImplemented": true
                        },
                        "targets": [
                          "user@example.com"
                        ],
                        "recurrence": "WEEKLY",
                        "nextRun": "2022-10-31T10:00:00.000Z",
                        "enabled": true,
                        "history": [
                          {
                            "type": "creation",
                            "message": "La tâche a été créée par ..."
                          }
                        ],
                        "createdAt": "2022-10-25T12:46:27.264Z",
                        "updatedAt": "2022-10-25T12:46:27.264Z"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/FullTask"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                        "name": "My Super Task",
                        "institution": "institution:aaaa0000-0000-00aa-aa00-aa00a0aa000a",
                        "layout": {
                          "extends": "basic"
                        },
                        "targets": [
                          "user@example.com"
                        ],
                        "recurrence": "WEEKLY",
                        "nextRun": "2022-10-31T10:00:00.000Z",
                        "lastRun": "2022-10-31T10:00:00.000Z",
                        "enabled": true,
                        "history": [
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000000",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche crée par ...",
                            "createdAt": "2022-11-07T15:06:24.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000001",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche éditée par ...",
                            "createdAt": "2022-11-07T15:08:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000002",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-error",
                            "message": "Rapport \"...\" non généré par ... suite à une erreur.",
                            "createdAt": "2022-11-07T15:16:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000003",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-success",
                            "message": "Rapport \"...\" généré par ...",
                            "createdAt": "2022-11-07T15:17:49.000Z"
                          }
                        ],
                        "createdAt": "2022-10-25T11:55:47.375Z",
                        "updatedAt": "2022-10-25T11:55:47.375Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "tasks-get-taskId",
        "description": "Get specific task of the authed user's institution. Accessible to READ.",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/institution"
          }
        ]
      },
      "put": {
        "summary": "Update specific task",
        "operationId": "tasks-put-taskId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "3f419e88-5a82-4c35-8520-a40a4f1742ae",
                        "institution": "institution:abba8400-1216-11eb-af77-ff33b5dd411e",
                        "layout": {
                          "edited": true,
                          "notImplemented": true
                        },
                        "targets": [
                          "user@example.com",
                          "user2@example.com"
                        ],
                        "recurrence": "WEEKLY",
                        "nextRun": "2022-11-28T10:00:00.000Z",
                        "enabled": true,
                        "history": [
                          {
                            "type": "creation",
                            "message": "La tâche a été créée par ..."
                          },
                          {
                            "type": "edition",
                            "message": "La tâche a été créée par ..."
                          }
                        ],
                        "createdAt": "2022-10-25T12:46:27.264Z",
                        "updatedAt": "2022-10-26T06:54:23.833Z"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/FullTask"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                        "name": "My Super Task",
                        "institution": "institution:aaaa0000-0000-00aa-aa00-aa00a0aa000a",
                        "layout": {
                          "extends": "basic"
                        },
                        "targets": [
                          "user@example.com"
                        ],
                        "recurrence": "WEEKLY",
                        "nextRun": "2022-11-28T10:00:00.000Z",
                        "lastRun": "2022-10-31T10:00:00.000Z",
                        "enabled": true,
                        "history": [
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000000",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche crée par ...",
                            "createdAt": "2022-11-07T15:06:24.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000001",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche éditée par ...",
                            "createdAt": "2022-11-07T15:08:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000002",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-error",
                            "message": "Rapport \"...\" non généré par ... suite à une erreur.",
                            "createdAt": "2022-11-07T15:16:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000003",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-success",
                            "message": "Rapport \"...\" généré par ...",
                            "createdAt": "2022-11-07T15:17:49.000Z"
                          }
                        ],
                        "createdAt": "2022-10-25T12:46:27.264Z",
                        "updatedAt": "2022-10-26T06:54:23.833Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Update specific task of the authed user's institution. Accessible to READ_WRITE.",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/institution"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FullTask"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "My Super Task",
                    "layout": {
                      "extends": "basic"
                    },
                    "targets": [
                      "user@example.com"
                    ],
                    "recurrence": "WEEKLY",
                    "nextRun": "2022-10-31T12:00:00+02:00",
                    "enabled": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "delete": {
        "summary": "Delete specific task",
        "operationId": "tasks-delete-taskId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "f63891f9-f640-4fdb-b426-65ba678b4e3e",
                        "institution": "institution:abba8400-1216-11eb-af77-ff33b5dd411e",
                        "layout": {
                          "toDelete": true
                        },
                        "targets": [
                          "user@example.com"
                        ],
                        "recurrence": "WEEKLY",
                        "nextRun": "2022-10-31T10:00:00.000Z",
                        "enabled": true,
                        "history": [
                          {
                            "createdAt": "2022-10-26T08:12:12Z",
                            "type": "creation",
                            "message": "Tâche créée par ..."
                          }
                        ],
                        "createdAt": "2022-10-26T08:12:12.402Z",
                        "updatedAt": "2022-10-26T08:12:12.402Z"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/FullTask"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                        "name": "My Super Task",
                        "institution": "institution:aaaa0000-0000-00aa-aa00-aa00a0aa000a",
                        "layout": {
                          "extends": "basic"
                        },
                        "targets": [
                          "user@example.com"
                        ],
                        "recurrence": "WEEKLY",
                        "nextRun": "2022-11-28T10:00:00.000Z",
                        "lastRun": "2022-10-31T10:00:00.000Z",
                        "enabled": true,
                        "history": [
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000000",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche crée par ...",
                            "createdAt": "2022-11-07T15:06:24.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000001",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche éditée par ...",
                            "createdAt": "2022-11-07T15:08:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000002",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-error",
                            "message": "Rapport \"...\" non généré par ... suite à une erreur.",
                            "createdAt": "2022-11-07T15:16:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000003",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-success",
                            "message": "Rapport \"...\" généré par ...",
                            "createdAt": "2022-11-07T15:17:49.000Z"
                          }
                        ],
                        "createdAt": "2022-10-25T12:46:27.264Z",
                        "updatedAt": "2022-10-26T06:54:23.833Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Update specific task of the authed user's institution. Accessible to READ_WRITE.",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/institution"
          }
        ],
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/{taskId}/enable": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "taskId",
          "in": "path",
          "required": true,
          "description": "The task id"
        }
      ],
      "put": {
        "summary": "Enable task",
        "operationId": "tasks-put-taskId-enable",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {}
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/FullTask"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                        "name": "My Super Task",
                        "institution": "institution:aaaa0000-0000-00aa-aa00-aa00a0aa000a",
                        "layout": {
                          "extends": "basic"
                        },
                        "targets": [
                          "user@example.com"
                        ],
                        "recurrence": "WEEKLY",
                        "nextRun": "2022-10-31T10:00:00.000Z",
                        "lastRun": "2022-10-31T10:00:00.000Z",
                        "enabled": true,
                        "history": [
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000000",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche crée par ...",
                            "createdAt": "2022-11-07T15:06:24.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000001",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche éditée par ...",
                            "createdAt": "2022-11-07T15:08:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000002",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-error",
                            "message": "Rapport \"...\" non généré par ... suite à une erreur.",
                            "createdAt": "2022-11-07T15:16:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000003",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-success",
                            "message": "Rapport \"...\" généré par ...",
                            "createdAt": "2022-11-07T15:17:49.000Z"
                          }
                        ],
                        "createdAt": "2022-10-25T11:55:47.375Z",
                        "updatedAt": "2022-10-25T11:55:47.375Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "tags": [
          "tasks"
        ],
        "description": "Enable task generation. Accessible to READ_WRITE.",
        "parameters": [
          {
            "$ref": "#/components/parameters/institution"
          }
        ]
      }
    },
    "/tasks/{taskId}/disable": {
      "put": {
        "summary": "Disable task",
        "operationId": "tasks-put-taskId]-disable",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {}
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/FullTask"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                        "name": "My Super Task",
                        "institution": "institution:aaaa0000-0000-00aa-aa00-aa00a0aa000a",
                        "layout": {
                          "extends": "basic"
                        },
                        "targets": [
                          "user@example.com"
                        ],
                        "recurrence": "WEEKLY",
                        "nextRun": "2022-10-31T10:00:00.000Z",
                        "lastRun": "2022-10-31T10:00:00.000Z",
                        "enabled": false,
                        "history": [
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000000",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche crée par ...",
                            "createdAt": "2022-11-07T15:06:24.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000001",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche éditée par ...",
                            "createdAt": "2022-11-07T15:08:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000002",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-error",
                            "message": "Rapport \"...\" non généré par ... suite à une erreur.",
                            "createdAt": "2022-11-07T15:16:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000003",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-success",
                            "message": "Rapport \"...\" généré par ...",
                            "createdAt": "2022-11-07T15:17:49.000Z"
                          }
                        ],
                        "createdAt": "2022-10-25T11:55:47.375Z",
                        "updatedAt": "2022-10-25T11:55:47.375Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "tags": [
          "tasks"
        ],
        "description": "Disable task generation. Accessible to READ_WRITE.",
        "parameters": [
          {
            "$ref": "#/components/parameters/institution"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "taskId",
          "in": "path",
          "required": true,
          "description": "The task id"
        }
      ]
    },
    "/tasks/{taskId}/run": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "taskId",
          "in": "path",
          "required": true,
          "description": "The task id"
        }
      ],
      "post": {
        "summary": "Generate report",
        "operationId": "tasks-post-task-run",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {}
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Bull's job id"
                        },
                        "queue": {
                          "type": "string"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "task": {
                              "$ref": "#/components/schemas/FullTask"
                            },
                            "origin": {
                              "type": "string"
                            },
                            "writeHistory": {
                              "type": "boolean"
                            },
                            "debug": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/institution"
          },
          {
            "schema": {
              "type": "array",
              "minItems": 1
            },
            "in": "query",
            "name": "test_emails",
            "style": "form",
            "description": "Emails to send instead of task targets. Enables test mode if present."
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "period_start",
            "description": "Override period start. ISO format. Time is ignored."
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "period_end",
            "description": "Override period end. ISO format. Time is ignored."
          }
        ],
        "description": "Trigger generation of report. Accessible to READ_WRITE."
      }
    },
    "/tasks/{taskId}/unsubscribe": {
      "put": {
        "summary": "Unsubscribe from task",
        "operationId": "tasks-post-taskId-unsubscribe",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "generateReports",
                        "running": true,
                        "nextRun": "2022-11-16T09:10:00.000Z",
                        "lastRun": "2022-11-16T09:09:59.248Z"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/FullTask"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 20,
                        "message": "OK"
                      },
                      "content": {
                        "id": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                        "name": "My Super Task",
                        "institution": "institution:aaaa0000-0000-00aa-aa00-aa00a0aa000a",
                        "layout": {
                          "extends": "..."
                        },
                        "targets": [
                          "user@example.com"
                        ],
                        "recurrence": "WEEKLY",
                        "nextRun": "2022-10-31T10:00:00.000Z",
                        "lastRun": "2022-10-31T10:00:00.000Z",
                        "enabled": true,
                        "history": [
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000000",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche crée par ...",
                            "createdAt": "2022-11-07T15:06:24.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000001",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "edition",
                            "message": "Tâche éditée par ...",
                            "createdAt": "2022-11-07T15:08:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000002",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-error",
                            "message": "Rapport \"...\" non généré par ... suite à une erreur.",
                            "createdAt": "2022-11-07T15:16:37.000Z"
                          },
                          {
                            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000003",
                            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                            "type": "generation-success",
                            "message": "Rapport \"...\" généré par ...",
                            "createdAt": "2022-11-07T15:17:49.000Z"
                          }
                        ],
                        "createdAt": "2022-10-25T11:55:47.375Z",
                        "updatedAt": "2022-10-25T11:55:47.375Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Shorthand to remove given email in given task",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "unsubId": {
                    "type": "string",
                    "description": "The id given in mail"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The mail address"
                  }
                },
                "required": [
                  "unsubId",
                  "email"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "unsubId": "YWY1NDk2MjYtNjQxYi00NGVkLTkzODEtZjNiNzUxMzcwMTY0%3AdG9tLnN1YmxldEBpbmlzdC50ZXN0LmZy",
                    "email": "user@example.com"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "unsubscribe"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/institution"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "taskId",
          "in": "path",
          "required": true,
          "description": "The task id"
        }
      ]
    },
    "/reports/{path}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "path",
          "in": "path",
          "required": true,
          "description": "Path to report"
        }
      ],
      "get": {
        "summary": "Get specific report",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDetail"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "success": true,
                      "detail": {
                        "createdAt": "2022-11-14T15:02:46.340Z",
                        "took": 1000,
                        "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                        "meta": {
                          "jobId": "134",
                          "jobAdded": "2022-11-15T10:43:03.899Z"
                        },
                        "files": {
                          "detail": "---.det.json",
                          "report": "---.rep.pdf",
                          "debug": "---.deb.json"
                        },
                        "sendingTo": [
                          "..."
                        ],
                        "period": {
                          "start": "2021-10-18T00:00:00.000Z",
                          "end": "2021-10-24T23:59:59.999Z"
                        },
                        "runAs": "...",
                        "stats": {
                          "pageCount": 6,
                          "size": 398460
                        }
                      }
                    }
                  },
                  "Error": {
                    "value": {
                      "success": false,
                      "detail": {
                        "createdAt": "2022-11-14T15:16:55.623Z",
                        "took": 1000,
                        "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
                        "meta": {
                          "jobId": "134",
                          "jobAttemps": 0,
                          "jobAdded": "2022-11-15T10:43:03.899Z"
                        },
                        "files": {
                          "detail": "---.det.json"
                        },
                        "error": {
                          "message": "...",
                          "stack": []
                        }
                      }
                    }
                  }
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "description": "The document",
                  "format": "binary"
                }
              }
            }
          }
        },
        "operationId": "reports-get-year-yearMonth-filename",
        "description": "Get specific report. Accessible to READ.",
        "parameters": [
          {
            "$ref": "#/components/parameters/institution"
          }
        ],
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "tags": [
          "report"
        ]
      }
    },
    "/queues": {
      "get": {
        "summary": "Get all queues",
        "tags": [
          "queue"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": [
                        "generation"
                      ]
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": [
                        "generation"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "queues-get",
        "description": "List all possible queues names. Accessible to READ.",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ]
      }
    },
    "/queues/{queue}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "queue",
          "in": "path",
          "required": true,
          "description": "Queue name"
        }
      ],
      "get": {
        "summary": "Get specific queue",
        "tags": [
          "queue"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "status": "active",
                        "jobs": []
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string"
                        },
                        "jobs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Job"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "status": "active",
                        "jobs": []
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "queues-get-queue",
        "description": "Get info about a queue. Only accessible to SUPER_USER.",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ]
      }
    },
    "/queues/{queue}/pause": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "queue",
          "in": "path",
          "required": true,
          "description": "Queue name"
        }
      ],
      "put": {
        "summary": "Pause queue",
        "operationId": "queues-put-queue-pause",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "status": "active",
                        "jobs": []
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string"
                        },
                        "jobs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Job"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "status": "paused",
                        "jobs": []
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "description": "Pause the whole queue. Only accessible to SUPER_USER.",
        "tags": [
          "queue"
        ]
      }
    },
    "/queues/{queue}/resume": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "queue",
          "in": "path",
          "required": true,
          "description": "Queue name"
        }
      ],
      "put": {
        "summary": "Resume queue",
        "operationId": "queues-put-queue-resume",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "status": "active",
                        "jobs": []
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string"
                        },
                        "jobs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Job"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "status": "active",
                        "jobs": []
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Resume the whole queue. Only accessible to SUPER_USER.",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "tags": [
          "queue"
        ]
      }
    },
    "/queues/{queue}/{jobId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "queue",
          "in": "path",
          "required": true,
          "description": "Queue name"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "Job id"
        }
      ],
      "get": {
        "summary": "Get specific job",
        "tags": [
          "queue"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "135",
                        "data": {},
                        "progress": 1,
                        "added": "2022-11-15T11:01:33.179Z",
                        "started": "2022-11-15T11:01:33.184Z",
                        "ended": "2022-11-15T11:01:38.320Z",
                        "attemps": 1,
                        "status": "completed"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/Job"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "135",
                        "data": {
                          "...": "..."
                        },
                        "progress": 1,
                        "added": "2022-11-15T11:01:33.179Z",
                        "started": "2022-11-15T11:01:33.184Z",
                        "ended": "2022-11-15T11:01:38.320Z",
                        "attemps": 1,
                        "status": "completed"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/401"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "queues-get-queue-jobId",
        "description": "Get specific job of the authed user's institution. Accessible to READ.",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ]
      }
    },
    "/queues/{queue}/{jobId}/retry": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "queue",
          "in": "path",
          "required": true,
          "description": "Queue name"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "Job id"
        }
      ],
      "post": {
        "summary": "Retry specific job",
        "operationId": "queues-post-queue-jobId-retry",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "135",
                        "data": {
                          "...": "..."
                        },
                        "progress": 1,
                        "added": "2022-11-15T11:01:33.179Z",
                        "started": "2022-11-15T11:01:33.184Z",
                        "ended": "2022-11-15T11:01:38.320Z",
                        "attemps": 1,
                        "status": "completed"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/Job"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "135",
                        "data": {
                          "...": "..."
                        },
                        "progress": 1,
                        "added": "2022-11-15T11:01:33.179Z",
                        "started": "2022-11-15T11:01:33.184Z",
                        "ended": "2022-11-15T11:01:38.320Z",
                        "attemps": 1,
                        "status": "completed"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Retry specific job of the authed user's institution. Accessible to READ_WRITE.",
        "tags": [
          "queue"
        ],
        "security": [
          {
            "ezmesure-jwt": []
          }
        ]
      }
    },
    "/crons": {
      "get": {
        "summary": "Get all crons",
        "tags": [
          "cron"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": [
                        {
                          "name": "daily-report",
                          "running": true,
                          "lastRun": "2022-11-16T07:21:00.405Z",
                          "nextRun": "2022-11-16T08:22:00.000+01:00"
                        }
                      ]
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Cron"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": [
                        {
                          "name": "generateReports",
                          "running": true,
                          "nextRun": "2022-11-16T08:22:00.000+01:00"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "crons-get",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "description": "Get all crons. Only accessible to SUPER_USER."
      }
    },
    "/crons/{cron}": {
      "get": {
        "summary": "Get specific cron",
        "tags": [
          "cron"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "daily-report",
                        "running": true,
                        "nextRun": "2022-11-16T09:10:00.000+01:00"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/Cron"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "generateReports",
                        "running": true,
                        "nextRun": "2022-11-16T09:10:00.000Z",
                        "lastRun": "2022-11-16T09:09:59.248Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "crons-get-cron",
        "description": "Get specific crons. Only accessible to SUPER_USER.",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cron",
          "in": "path",
          "required": true,
          "description": "Cron name"
        }
      ]
    },
    "/crons/{cron}/start": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cron",
          "in": "path",
          "required": true,
          "description": "Cron name"
        }
      ],
      "put": {
        "summary": "Start cron",
        "operationId": "crons-put-cron-start",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "daily-report",
                        "running": true,
                        "nextRun": "2022-11-16T09:10:00.000+01:00"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/Cron"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "generateReports",
                        "running": true,
                        "nextRun": "2022-11-16T09:10:00.000Z",
                        "lastRun": "2022-11-16T09:09:59.248Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Start specific cron. Only accessible to SUPER_USER.",
        "tags": [
          "cron"
        ],
        "security": [
          {
            "ezmesure-jwt": []
          }
        ]
      }
    },
    "/crons/{cron}/stop": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cron",
          "in": "path",
          "required": true,
          "description": "Cron name"
        }
      ],
      "put": {
        "summary": "Stop cron",
        "operationId": "crons-put-cron-stop",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "daily-report",
                        "running": true,
                        "nextRun": "2022-11-16T09:10:00.000+01:00"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/Cron"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "generateReports",
                        "running": true,
                        "nextRun": "2022-11-16T09:10:00.000Z",
                        "lastRun": "2022-11-16T09:09:59.248Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Stop specific cron. Only accessible to SUPER_USER.",
        "tags": [
          "cron"
        ],
        "security": [
          {
            "ezmesure-jwt": []
          }
        ]
      }
    },
    "/crons/{cron}/force": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cron",
          "in": "path",
          "required": true,
          "description": "Cron name"
        }
      ],
      "post": {
        "summary": "Force cron",
        "operationId": "crons-post-cron-force",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "daily-report",
                        "running": true,
                        "nextRun": "2022-11-16T09:10:00.000+01:00"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/Cron"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "generateReports",
                        "running": true,
                        "nextRun": "2022-11-16T09:10:00.000Z",
                        "lastRun": "2022-11-16T09:09:59.248Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "Force specific cron to run. Only accessible to SUPER_USER.",
        "tags": [
          "cron"
        ],
        "security": [
          {
            "ezmesure-jwt": []
          }
        ]
      }
    },
    "/unsubscribe/{unsubId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "unsubId",
          "in": "path",
          "required": true,
          "description": "The unsubscribtion id given in mail"
        }
      ],
      "get": {
        "summary": "Get unsubscribe form",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "unsubscribe-get-unsubId",
        "description": "Get unsubscribe form to be removed from task targets.",
        "tags": [
          "unsubscribe"
        ]
      }
    },
    "/templates": {
      "get": {
        "summary": "Get templates",
        "tags": [
          "templates"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": [
                        {
                          "name": "basic",
                          "renderer": "vega-pdf",
                          "pageCount": 6
                        },
                        {
                          "name": "tests/slot-tests",
                          "renderer": "vega-pdf",
                          "pageCount": 9
                        }
                      ]
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "renderer": {
                            "type": "string"
                          },
                          "pageCount": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": [
                        {
                          "name": "basic",
                          "renderer": "vega-pdf",
                          "pageCount": 6
                        },
                        {
                          "name": "tests/slot-tests",
                          "renderer": "vega-pdf",
                          "pageCount": 9
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "templates-get",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "description": "Get all defined templated. Accessible to READ_WRITE."
      },
      "parameters": []
    },
    "/templates/{layoutName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "layoutName",
          "in": "path",
          "required": true,
          "description": "Name of the layout"
        }
      ],
      "get": {
        "summary": "Get specific layout",
        "tags": [
          "templates"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "tests/slot-tests",
                        "renderer": "vega-pdf",
                        "pageCount": 9,
                        "template": {}
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "renderer": {
                          "type": "string"
                        },
                        "pageCount": {
                          "type": "integer"
                        },
                        "template": {
                          "$ref": "#/components/schemas/LayoutJSON"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "name": "tests/slot-tests",
                        "renderer": "vega-pdf",
                        "pageCount": 9,
                        "template": {
                          "figures": []
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "templates-get-name(*)",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "parameters": [],
        "description": "Get specific defined template. Accessible to READ_WRITE."
      }
    },
    "/history": {
      "get": {
        "summary": "Get history entries",
        "tags": [
          "history"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": [
                        {
                          "id": "8ad0bc3d-2dd4-4d54-892b-868bc20cc14a",
                          "taskId": "af549626-641b-44ed-9381-f3b751370164",
                          "type": "edition",
                          "message": "Tâche activée par tom.sublet",
                          "data": null,
                          "createdAt": "2022-12-01T14:08:40.000Z"
                        },
                        {
                          "id": "687ef0ae-e912-421e-a9d9-4c68968045cc",
                          "taskId": "af549626-641b-44ed-9381-f3b751370164",
                          "type": "edition",
                          "message": "Tâche désactivée par tom.sublet",
                          "data": null,
                          "createdAt": "2022-12-01T14:08:34.000Z"
                        },
                        {
                          "id": "c3a054a3-24c3-4120-bfa8-939f328a8657",
                          "taskId": "7398ffd9-ab64-48d0-a854-5f0b28b3dca9",
                          "type": "generation-error",
                          "message": "Rapport \"2022/2022-11/reporting_ezMESURE_bibcnrs-*:-report-1-v-2-1_c0192740-ac6d-48cf-b15d-91fbadcf3cbc\" non généré par tom.sublet suite à une erreur.",
                          "data": {
                            "jobId": "77",
                            "jobAdded": "2022-11-24T11:40:34.441Z"
                          },
                          "createdAt": "2022-11-24T11:40:37.000Z"
                        },
                        {
                          "id": "2fdd9f4c-1ac5-49a1-b988-c33a590c4c94",
                          "taskId": "af549626-641b-44ed-9381-f3b751370164",
                          "type": "unsubscription",
                          "message": "tom.sublet@inist.test.fr s'est désinscrit de la liste de diffusion.",
                          "data": null,
                          "createdAt": "2022-11-24T08:25:44.000Z"
                        },
                        {
                          "id": "75ae6679-df98-45ad-b8da-2d7e62169681",
                          "taskId": "7398ffd9-ab64-48d0-a854-5f0b28b3dca9",
                          "type": "generation-error",
                          "message": "Rapport \"2022/2022-11/reporting_ezMESURE_bibcnrs-*:-report-1-v-2-1_aa6017f8-1b2e-4d11-98ad-43193342b0b7\" non généré par tom.sublet suite à une erreur.",
                          "data": {
                            "jobId": "28",
                            "jobAdded": "2022-11-18T14:45:36.660Z"
                          },
                          "createdAt": "2022-11-18T14:45:39.431Z"
                        },
                        {
                          "id": "afc9879b-efe4-4171-93d6-d2ce19683f94",
                          "taskId": "7398ffd9-ab64-48d0-a854-5f0b28b3dca9",
                          "type": "generation-success",
                          "message": "Rapport \"2022/2022-11/reporting_ezMESURE_bibcnrs-*:-report-1-v-2-1_63ddaa82-41b0-4693-a4e9-1f7e9f460b6a\" généré par daily-cron-job",
                          "data": {
                            "jobId": "9",
                            "jobAdded": "2022-11-16T08:35:00.102Z"
                          },
                          "createdAt": "2022-11-16T08:35:05.610Z"
                        },
                        {
                          "id": "a877468c-4130-4f30-a429-0852999b259f",
                          "taskId": "af549626-641b-44ed-9381-f3b751370164",
                          "type": "generation-success",
                          "message": "Rapport \"2022/2022-11/reporting_ezMESURE_test-api_8f4d4c51-bfbc-46c7-ae2c-505bab24d052\" généré par daily-cron-job",
                          "data": {
                            "jobId": "7",
                            "jobAdded": "2022-11-16T08:35:00.100Z"
                          },
                          "createdAt": "2022-11-16T08:35:05.230Z"
                        },
                        {
                          "id": "e080340c-b217-4113-9615-f0d89d84926d",
                          "taskId": "696bc968-6155-4258-85be-ef2fa53040a3",
                          "type": "generation-success",
                          "message": "Rapport \"2022/2022-11/reporting_ezMESURE_tests-de-slots_7ad82b0f-8ad8-4e35-97d3-52f771f0e110\" généré par daily-cron-job",
                          "data": {
                            "jobId": "8",
                            "jobAdded": "2022-11-16T08:35:00.101Z"
                          },
                          "createdAt": "2022-11-16T08:35:03.340Z"
                        },
                        {
                          "id": "b86683b5-e70c-43fe-8f6b-b6a57406e228",
                          "taskId": "7398ffd9-ab64-48d0-a854-5f0b28b3dca9",
                          "type": "generation-success",
                          "message": "Rapport \"2022/2022-11/reporting_ezMESURE_bibcnrs-*:-report-1-v-2-1_e524a804-9d10-46d1-8ae9-6002d278b82e\" généré par auto",
                          "data": {
                            "jobId": "5",
                            "jobAdded": "2022-11-16T06:33:00.089Z"
                          },
                          "createdAt": "2022-11-16T06:33:05.551Z"
                        },
                        {
                          "id": "b1800558-1183-40f9-b6a6-683531f28700",
                          "taskId": "696bc968-6155-4258-85be-ef2fa53040a3",
                          "type": "generation-success",
                          "message": "Rapport \"2022/2022-11/reporting_ezMESURE_tests-de-slots_808e7a78-3386-4b6a-bb01-e994da196cab\" généré par auto",
                          "data": {
                            "jobId": "4",
                            "jobAdded": "2022-11-16T06:33:00.089Z"
                          },
                          "createdAt": "2022-11-16T06:33:03.267Z"
                        },
                        {
                          "id": "5ae55e48-d4ae-4d1f-a8ed-9d4219f12276",
                          "taskId": "7398ffd9-ab64-48d0-a854-5f0b28b3dca9",
                          "type": "generation-success",
                          "message": "Rapport \"2022/2022-11/reporting_ezMESURE_bibcnrs-*:-report-1-v-2-1_87bb7e0c-d0dc-4204-93a1-73142ad3b9ae\" généré par tom.sublet",
                          "data": {
                            "jobId": "143",
                            "jobAdded": "2022-11-15T13:54:05.851Z",
                            "jobAttemps": 1
                          },
                          "createdAt": "2022-11-15T13:54:11.155Z"
                        },
                        {
                          "id": "4282365e-779f-4d93-9b26-771f73f35472",
                          "taskId": "7398ffd9-ab64-48d0-a854-5f0b28b3dca9",
                          "type": "edition",
                          "message": "Tâche éditée par tom.sublet",
                          "data": null,
                          "createdAt": "2022-11-14T14:33:07.000Z"
                        },
                        {
                          "id": "e7eaf700-1a0b-4de5-976c-8bf366fa49f1",
                          "taskId": "7398ffd9-ab64-48d0-a854-5f0b28b3dca9",
                          "type": "edition",
                          "message": "Tâche éditée par tom.sublet",
                          "data": null,
                          "createdAt": "2022-11-14T14:32:43.000Z"
                        },
                        {
                          "id": "3d318ebb-110e-48f8-ab9a-c9f63d4f1c60",
                          "taskId": "7398ffd9-ab64-48d0-a854-5f0b28b3dca9",
                          "type": "edition",
                          "message": "Tâche éditée par tom.sublet",
                          "data": null,
                          "createdAt": "2022-11-14T09:52:30.000Z"
                        },
                        {
                          "id": "bebec9b2-8c2b-44d0-b740-4c0a766c59bc",
                          "taskId": "af549626-641b-44ed-9381-f3b751370164",
                          "type": "generation-error",
                          "message": "Rapport \"2022/2022-11/reporting_ezMESURE_test-api_fd3526e3-7fc9-48a9-8d30-b6f2f8cfd54d\" non généré par tom.sublet suite à une erreur.",
                          "data": null,
                          "createdAt": "2022-11-07T15:16:37.000Z"
                        }
                      ],
                      "meta": {
                        "count": 15,
                        "lastId": "bebec9b2-8c2b-44d0-b740-4c0a766c59bc"
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "$ref": "#/components/schemas/History"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "lastId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "id": "string",
                        "taskId": "string",
                        "type": "string",
                        "message": "string",
                        "createdAt": "2019-08-24T14:15:22Z",
                        "data": {}
                      },
                      "meta": {
                        "count": 1,
                        "lastId": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "history-get",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "description": "Get history entries of all tasks. Only accessible to SUPER_USER.",
        "parameters": [
          {
            "$ref": "#/components/parameters/previous"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "$ref": "#/components/parameters/institution"
          }
        ]
      }
    },
    "/me": {
      "get": {
        "summary": "Get user info",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "username": "tom.sublet",
                        "email": "tom.sublet@inist.fr",
                        "roles": [
                          "ezreporting",
                          "ezreporting-readonly",
                          "bibcnrs",
                          "tech_contact"
                        ]
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "maxRolePriority": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "status": {
                        "code": 0,
                        "message": "string"
                      },
                      "content": {
                        "username": "string",
                        "email": "string",
                        "roles": [
                          "string"
                        ],
                        "maxRolePriority": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "auth-get",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "description": "Get authed user info. Accessible to READ."
      }
    },
    "/me/permissions": {
      "get": {
        "summary": "Check permissions",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "status": {
                        "code": 200,
                        "message": "OK"
                      },
                      "content": {
                        "health": true,
                        "crons": {
                          "read": false,
                          "update": false
                        },
                        "tasks": {
                          "customInstitution": false,
                          "create": true,
                          "read": true,
                          "update": true,
                          "delete": true
                        },
                        "reports": {
                          "create": true,
                          "read": true
                        },
                        "queues": {
                          "read_all": true,
                          "read_one": false,
                          "update": false,
                          "jobs": {
                            "read": true,
                            "update": true
                          }
                        },
                        "layouts": {
                          "read": true
                        },
                        "history": {
                          "read": false
                        }
                      }
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "auth-get-permissions",
        "security": [
          {
            "ezmesure-jwt": []
          }
        ],
        "description": "Check permission of current user. Accessible to READ."
      }
    }
  },
  "components": {
    "schemas": {
      "Task": {
        "type": "object",
        "x-examples": {
          "Example": {
            "id": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
            "name": "My Super Task",
            "institution": "institution:aaaa0000-0000-00aa-aa00-aa00a0aa000a",
            "recurrence": "WEEKLY",
            "nextRun": "2022-10-31T10:00:00.000Z",
            "enabled": true,
            "createdAt": "2022-10-25T11:55:47.375Z",
            "updatedAt": "2022-10-25T11:55:47.375Z"
          }
        },
        "description": "Reporting task",
        "x-tags": [
          "task"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the task",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "institution": {
            "type": "string",
            "description": "Institution concerned by the task",
            "readOnly": true
          },
          "recurrence": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "QUARTERLY",
              "BIENNIAL",
              "YEARLY"
            ]
          },
          "nextRun": {
            "type": "string",
            "description": "Next time the task will be run",
            "format": "date-time"
          },
          "lastRun": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Is the task enabled"
          },
          "createdAt": {
            "type": "string",
            "description": "Task created at ...",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "description": "Task last updated at ...",
            "nullable": true,
            "readOnly": true
          }
        },
        "required": [
          "name",
          "recurrence",
          "nextRun"
        ]
      },
      "FullTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Task"
          },
          {
            "type": "object",
            "properties": {
              "layout": {
                "type": "object",
                "description": "Layout of the report",
                "required": [
                  "extends"
                ],
                "properties": {
                  "extends": {
                    "type": "string",
                    "description": "Base layout name"
                  },
                  "fetchOptions": {
                    "type": "object",
                    "description": "Data options used by \"extends\""
                  },
                  "inserts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/LayoutJSON"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "at": {
                            "type": "number"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "targets": {
                "type": "array",
                "description": "Emails target",
                "minItems": 1,
                "items": {
                  "type": "string",
                  "format": "email"
                }
              },
              "history": {
                "type": "array",
                "description": "History of the task",
                "items": {
                  "$ref": "#/components/schemas/History"
                },
                "readOnly": true
              }
            },
            "required": [
              "layout",
              "targets"
            ]
          }
        ]
      },
      "History": {
        "type": "object",
        "x-examples": {
          "Example": {
            "id": "0cc0c0cc-ccc0-00cc-0c00-c0c000000003",
            "taskId": "0000a00a-aaa0-0000-a0aa-000a0a0aa000",
            "type": "generation-success",
            "message": "Rapport \"...\" généré par ...",
            "createdAt": "2022-11-07T15:17:49.000Z",
            "meta": {
              "jobId": "0",
              "jobAdded": "2022-11-07T15:17:40.000Z"
            }
          }
        },
        "description": "Task's history",
        "properties": {
          "id": {
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "id",
          "taskId",
          "type",
          "message"
        ]
      },
      "Figure": {
        "title": "Figure",
        "x-stoplight": {
          "id": "1gq05jmf1edi5"
        },
        "type": "object",
        "description": "Reporting figure",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of figure"
          },
          "data": {
            "oneOf": [
              {
                "type": "string",
                "properties": {}
              },
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "array",
                      "items": {}
                    },
                    {
                      "type": "string",
                      "properties": {}
                    },
                    {
                      "type": "number",
                      "properties": {}
                    }
                  ]
                }
              }
            ],
            "description": "Data of figure"
          },
          "slots": {
            "type": "array",
            "description": "Slot used by figure",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "type",
          "data"
        ]
      },
      "Job": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "0",
            "data": {
              "...": "..."
            },
            "progress": 1,
            "added": "2022-11-15T11:01:33.179Z",
            "started": "2022-11-15T11:01:33.184Z",
            "ended": "2022-11-15T11:01:38.320Z",
            "attemps": 1,
            "status": "completed"
          }
        },
        "properties": {
          "id": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "task": {
                "$ref": "#/components/schemas/FullTask"
              },
              "origin": {
                "type": "string"
              },
              "writeHistory": {
                "type": "boolean"
              },
              "debug": {
                "type": "boolean"
              }
            }
          },
          "result": {
            "$ref": "#/components/schemas/ReportDetail"
          },
          "progress": {
            "type": "integer"
          },
          "added": {
            "type": "string"
          },
          "started": {
            "type": "string"
          },
          "ended": {
            "type": "string"
          },
          "attemps": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "data",
          "added",
          "attemps",
          "status"
        ],
        "description": ""
      },
      "Cron": {
        "type": "object",
        "x-examples": {
          "Example": {
            "name": "daily-report",
            "running": true,
            "nextRun": "2022-11-16T09:10:00.000Z",
            "lastRun": "2022-11-16T09:09:59.000Z"
          }
        },
        "description": "Cron job info",
        "properties": {
          "name": {
            "type": "string"
          },
          "running": {
            "type": "boolean"
          },
          "nextRun": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastRun": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Pong": {
        "x-examples": {
          "Example": {
            "name": "reporting-report",
            "status": true,
            "time": 3
          }
        },
        "description": "Response to a ping/health check",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "elapsedTime": {
            "type": "integer"
          },
          "statusCode": {
            "type": "integer",
            "nullable": true
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "status"
        ]
      },
      "LayoutJSON": {
        "title": "LayoutJSON",
        "x-stoplight": {
          "id": "3pnn0dzy37oau"
        },
        "type": "object",
        "description": "Layout info. Can have more properties",
        "x-examples": {
          "Example": {
            "name": "basic",
            "renderer": "vega-pdf",
            "pageCount": 6
          }
        },
        "properties": {
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "array",
                "items": {}
              },
              {
                "type": "string"
              }
            ]
          },
          "fetcher": {
            "type": "string"
          },
          "fetchOptions": {
            "type": "object"
          },
          "figures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Figure"
            }
          }
        },
        "required": [
          "figures"
        ]
      },
      "ReportDetail": {
        "title": "ReportDetail",
        "x-stoplight": {
          "id": "3szv5zpo21wqn"
        },
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "detail": {
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "took": {
                "type": "integer",
                "description": "Time taken to generate report in ms"
              },
              "taskId": {
                "type": "string"
              },
              "meta": {
                "type": "object",
                "nullable": true
              },
              "files": {
                "type": "object",
                "required": [
                  "detail"
                ],
                "properties": {
                  "detail": {
                    "type": "string"
                  },
                  "report": {
                    "type": "string"
                  },
                  "debug": {
                    "type": "string"
                  }
                }
              },
              "sendingTo": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "period": {
                "type": "object",
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "start",
                  "end"
                ]
              },
              "runAs": {
                "type": "string"
              },
              "stats": {
                "type": "object",
                "description": "Stats about report",
                "properties": {
                  "pageCount": {
                    "type": "integer"
                  },
                  "size": {
                    "type": "integer"
                  }
                }
              },
              "error": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "stack": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "message",
                  "stack"
                ]
              }
            },
            "required": [
              "took",
              "taskId",
              "files"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "ezmesure-jwt": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "requestBodies": {},
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "content": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-examples": {
                "example-1": {
                  "status": {
                    "code": 400,
                    "message": "Bad Request"
                  },
                  "content": {
                    "message": "JWT malformed: invalid signature"
                  }
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "status": {
                    "code": 400,
                    "message": "Bad Request"
                  },
                  "content": {
                    "message": "..."
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "content": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-examples": {
                "example-1": {
                  "status": {
                    "code": 401,
                    "message": "Unauthorized"
                  },
                  "content": {
                    "message": "'GET /users/' requires auth"
                  }
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "status": {
                    "code": 401,
                    "message": "Unauthorized"
                  },
                  "content": {
                    "message": "'...' requires auth"
                  }
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "content": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-examples": {
                "example-1": {
                  "status": {
                    "code": 403,
                    "message": "Forbidden"
                  },
                  "content": {
                    "message": "User 'user' doesn't have the rights to acces to 'GET /users/'"
                  }
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "status": {
                    "code": 403,
                    "message": "Forbidden"
                  },
                  "content": {
                    "message": "User '...' doesn't have the rights to access to '...'"
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "content": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-examples": {
                "example-1": {
                  "status": {
                    "code": 404,
                    "message": "Not Found"
                  },
                  "content": {
                    "message": "User 'testa' not found"
                  }
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "status": {
                    "code": 404,
                    "message": "Not Found"
                  },
                  "content": {
                    "message": "... '...' not found"
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "content": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-examples": {
                "example-1": {
                  "status": {
                    "code": 409,
                    "message": "Conflict"
                  },
                  "content": {
                    "message": "Task with id 'af549626-641b-44ed-9381-f3b751370164' is already disabled"
                  }
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "status": {
                    "code": 409,
                    "message": "Conflict"
                  },
                  "content": {
                    "message": "..."
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "content": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-examples": {
                "example-1": {
                  "status": {
                    "code": 500,
                    "message": "Internal Server Error"
                  },
                  "content": {
                    "message": "Unexpected token v in JSON at position 0"
                  }
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "status": {
                    "code": 500,
                    "message": "Internal Server Error"
                  },
                  "content": {
                    "message": "..."
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "previous": {
        "name": "previous",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "0000a00a-aaa0-0000-a0aa-000a0a0aa000"
        },
        "description": "Previous id of the last request"
      },
      "count": {
        "name": "count",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "pattern": "^[0-9]+",
          "default": "15"
        },
        "description": "Count of object to return"
      },
      "institution": {
        "name": "institution",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "institution:aaaa0000-0000-00aa-aa00-aa00a0aa000a"
        },
        "description": "Force institution. Only available for SUPERUSERS, otherwise it'll be ignored."
      }
    }
  },
  "tags": [
    {
      "name": "auth"
    },
    {
      "name": "cron"
    },
    {
      "name": "health"
    },
    {
      "name": "history"
    },
    {
      "name": "templates"
    },
    {
      "name": "queue"
    },
    {
      "name": "report"
    },
    {
      "name": "tasks"
    },
    {
      "name": "unsubscribe"
    }
  ]
}