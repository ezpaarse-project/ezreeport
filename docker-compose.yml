version: "3.9"

services:
  db:
    image: postgres:15.1-alpine3.17
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_DB}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - ./data/db:/var/lib/postgresql/data
    deploy:
      resources:
          limits:
            memory: 256MB
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 20s

  redis:
    image: redis:7.0.7-alpine3.17
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./data/redis:/data
    deploy:
      resources:
          limits:
            memory: 2G
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli --pass ${REDIS_PASSWORD} ping | grep PONG"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 20s

  report:
    build:
      context: .
      target: report
    volumes:
      - ./data/report:/data/ezreeport/report # Report output
      - ./logs/report:/var/log/ezreeport/report # Logs output
    ports:
      - 8080:8080
    environment:
      # node
      - NODE_ENV
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      # elastic
      - ELASTIC_URL
      - ELASTIC_USERNAME
      - ELASTIC_PASSWORD
      - ELASTIC_API_KEY
      - ELASTIC_REQUIRED_STATUS
      - ELASTIC_MAX_TRIES
      # database
      - DATABASE_URL
      # workers
      - WORKERS_CONCURRENCE
      - WORKERS_MAX_EXEC_TIME
      # report specfic
      - REPORT_ADMIN_KEY
      - REPORT_CRON_TZ
      - REPORT_CRON_TIMER_GENERATE_REPORT
      - REPORT_CRON_TIMER_PURGE_OLD_REPORT
      - REPORT_ITERATIONS_TO_LIVE
      - REPORT_DAYS_TO_LIVE
      - REPORT_FETCHER_BANNED_DOMAINS
      - EMAIL_DEV_TEAM
      # common
      - API_ALLOWED_ORIGINS
      - LOG_LEVEL
      - HTTP_PORT
    extra_hosts:
      - host.docker.internal:host-gateway # Used because elastic is on the same machine, but not the same network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
          limits:
            memory: ${REPORT_MEM_LIMIT:-7}G
    restart: unless-stopped

  mail:
    build:
      context: .
      target: mail
    volumes:
      - ./logs/mail:/var/log/ezreeport/mail # Logs output
    environment:
      # node
      - NODE_ENV
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      # smtp
      - SMTP_HOST
      - SMTP_PORT
      - SMTP_SECURE
      - SMTP_IGNORE_TLS
      - SMTP_REJECT_UNAUTHORIZED
      # workers
      - WORKERS_CONCURRENCE
      - WORKERS_MAX_EXEC_TIME
      # mail specific
      - EMAIL_SENDER
      - EMAIL_SUPPORT_TEAM
      - EMAIL_ATTEMPTS
      - EMAIL_ATTEMPTS_INTERVAL
      # common
      - API_URL
      - LOG_LEVEL
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
          limits:
            memory: ${EMAIL_MEM_LIMIT:-3}G
    restart: unless-stopped
