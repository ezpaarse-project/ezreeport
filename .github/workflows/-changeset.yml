name: Trigger a new version using changeset

on:
  push:
    branches:
      - master
      - 'rc/*'
      # - dev

env:
  HUSKY: 0
  TURBO_UI: 'false'
  EZR_PRERELEASE_MODE: ${{ github.ref == 'refs/heads/master' && 'exit' || 'pre' }}
  EZR_PRERELEASE_TAG: ${{ github.ref == 'refs/heads/dev' && 'beta' || 'rc' }}

jobs:
  release:
    if: "!contains(github.event.head_commit.message, 'chore(release):')"
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PATNAME }}

      - name: Setup pnpm ‚öôÔ∏è
        uses: pnpm/action-setup@v3

      - name: Setup Node ‚öôÔ∏è
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Install dependencies ‚öôÔ∏è
        run: pnpm i --frozen-lockfile

      - name: Get prerelease state ‚öóÔ∏è
        id: prerelease_state
        if: "hashFiles('./.changeset/pre.json') != ''"
        run: |
          content=`cat ./.changeset/pre.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "preJson=$content" >> $GITHUB_OUTPUT

      - name: Exit pre-release mode ‚öóÔ∏è
        if: "hashFiles('./.changeset/pre.json') != '' && (fromJson(steps.prerelease_state.outputs.preJson).mode != env.EZR_PRERELEASE_MODE || fromJson(steps.prerelease_state.outputs.preJson).tag != env.EZR_PRERELEASE_TAG)"
        run: pnpm changeset pre exit

      - name: Enter pre-release mode ‚öóÔ∏è
        if: "env.EZR_PRERELEASE_MODE == 'pre' && (hashFiles('./.changeset/pre.json') == '' || fromJson(steps.prerelease_state.outputs.preJson).mode != env.EZR_PRERELEASE_MODE || fromJson(steps.prerelease_state.outputs.preJson).tag != env.EZR_PRERELEASE_TAG)"
        run: pnpm changeset pre enter ${{ env.EZR_PRERELEASE_TAG }}

      - name: Build changelogs üìù
        run: pnpm changeset version

      - name: Push changelogs üöÄ
        uses: EndBug/add-and-commit@v9
        with:
          message: 'chore(release): publish changelogs'
          default_author: github_actions

      - name: Add tags üîñ
        run: |
          pnpm changeset tag

          # GitHub doesn't trigger workflows if more than 3 tags are pushed simultaneously,
          # so we push them one by one (and avoid pushing already pushed tags)
          # See: https://github.com/orgs/community/discussions/56152#discussioncomment-9676206
          comm -23 \
            <(git tag --list | sort) \
            <(git ls-remote --tags origin \
              | awk '{print $2}' \
              | sed 's|refs/tags/||' \
              | sort) \
          | while read tag; do
              echo "Pushing tag: $tag"
              git push origin "$tag"
            done
